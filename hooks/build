#!/bin/bash
# Build phase hook for Docker Hub automated builds
#
# Expects DISTRO and TEXLIVE_VERSION
#
# Orinally based on https://github.com/vaidik/docker-etcd/

set -e

source common.sh
source hooks/util.sh


# Print environment variables
trace "env | sort"
trace ls

# Build the base image, and tag for vanilla images
trace docker build -t base \
    --target base --build-arg "BASE_IMAGE=ubuntu:$DISTRO" .

if [ -z "$TEXLIVE_VERSION" ]; then
    # Build $DISTRO-minimal, $DISTRO, and $DISTRO-full
    name="mjenz/texlive:$DISTRO"
    trace docker build -t "$name-minimal" \
        --target minimal --build-arg "BASE_IMAGE=ubuntu:$DISTRO" .
    trace docker build -t "$name" \
        --target default --build-arg "BASE_IMAGE=ubuntu:$DISTRO" .
    trace docker build -t "$name-full" \
        --target full --build-arg "BASE_IMAGE=ubuntu:$DISTRO" .
    print_versions "$name-minimal"
    print_versions "$name"
    print_versions "$name-full"
else
    # Build $DISTRO-vanilla-$year and $DISTRO-vanilla-$year-full using tagged base image
    name="mjenz/texlive:$DISTRO-vanilla-$TEXLIVE_VERSION"
    trace docker build -t "$name" -f Dockerfile.vanilla \
        --target basic --build-arg "TEXLIVE_VERSION=$TEXLIVE_VERSION" .
    trace docker build -t "$name-full" -f Dockerfile.vanilla \
        --target full --build-arg "TEXLIVE_VERSION=$TEXLIVE_VERSION" .

    # If this is the latest TeX Live version, add short tag
    if [ "$TEXLIVE_VERSION" == "$LATEST_TEXLIVE" ]; then
        trace docker tag "$name" "mjenz/texlive:$DISTRO-vanilla"
    fi

    print_versions "$name"
    print_versions "$name-full"
fi
